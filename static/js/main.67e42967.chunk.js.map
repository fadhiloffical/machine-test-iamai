{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","result","useState","experiencePoints","setExperiencePoints","searchTerm","setSearchTerm","finalEvenValues","setFinalEvenValues","React","showI","setShowI","length","className","filter","value","map","filteredfinalEvenValues","html","Information","e2","preventDefault","console","log","onClick","xmlns","width","height","viewBox","d","onSubmit","e","alert","id","type","placeholder","onChange","event","target","e1","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAyIeA,MAtIf,WAAgB,IAyBVC,EAzBS,EAEmCC,mBAAS,IAF5C,mBAENC,EAFM,KAEYC,EAFZ,OAGuBF,mBAAS,IAHhC,mBAGNG,EAHM,KAGMC,EAHN,OAIiCJ,mBAAS,IAJ1C,mBAINK,EAJM,KAIWC,EAJX,OAKaC,IAAMP,UAAS,GAL5B,mBAKNQ,EALM,KAKCC,EALD,KAmCXJ,EAAgBK,OAAS,IAC3BX,EACE,mCACA,sBAAKY,UAAU,SAAf,UACE,wCACI,4BACCN,EAAgBO,QAAO,SAAAP,GAAe,OAAIA,EAAgBQ,MAAO,GAAK,KAAGC,KAAI,SAAAC,GAAuB,OACnG,qCAAGA,EAAwBF,MAA3B,gBAIF,4BACCR,EAAgBO,QAAO,SAAAP,GAAe,OAAIA,EAAgBQ,MAAO,GAAK,KAAGC,KAAI,SAAAC,GAAuB,OACnG,qCAAGA,EAAwBF,MAA3B,sBAQZ,IAMIG,EANEC,EAAc,SAACC,GACnBA,EAAGC,iBACHV,GAAUD,GACVY,QAAQC,IAAIb,IAkEZ,OA5DAQ,GADY,IAAVR,EAEA,sBAAKG,UAAU,WAAf,UAEE,yBAAQA,UAAU,cAAcW,QAASL,EAAzC,cAAuD,qBAAKM,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAvE,SAAmF,sBAAMC,EAAE,0SAClJ,uBAAMC,SA9DiB,SAACC,GAC1BA,EAAEV,iBACwB,IAAtBhB,EAAWO,OACboB,MAAM,4BAGN5B,EAAoB,GAAD,mBAAMD,GAAN,CAAwB,CACvC8B,GAAI9B,EAAiBS,OACrBG,MAAOV,MAEXC,EAAc,MAoDd,UACI,uBAAO4B,KAAK,SACRC,YAAY,mBACZpB,MAAOV,EACP+B,SApDS,SAAAC,GACjB/B,EAAc+B,EAAMC,OAAOvB,UAoDjB,uBAAK,uBAEX,sBAAKF,UAAU,UAAf,UACE,wBAAQqB,KAAK,SAAb,mCACA,wBAAQV,QApDA,SAACe,GACnBA,EAAGlB,iBACHb,EAAmBL,GAEnBC,EAAoB,KAgDV,0BAIDH,KAMP,sBAAKY,UAAU,WAAf,UACE,yBAAQA,UAAU,cAAcW,QAASL,EAAzC,cAAuD,qBAAKM,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAvE,SAAmF,sBAAMC,EAAE,0SAEpJ,sBAAKhB,UAAU,UAAf,UACA,0GAA4E,uBAA5E,4FACyF,0BAEzF,2FAEkD,uBAFlD,8DAG2D,0BAE3D,6CACY,uBADZ,2BAEwB,uBAFxB,oFAGiF,uBAHjF,sHAImH,0BAEnH,8CACa,uBADb,kBAEe,uBAFf,8IAG2I,uBAH3I,uJAIoJ,0BAEpJ,6CACY,uBADZ,oBAIA,+CACgB,uBADhB,UAES,uBAFT,mBAUA,qBAAKA,UAAU,MAAf,SAECK,KCvHUsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.67e42967.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n\n  const [experiencePoints, setExperiencePoints] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [finalEvenValues, setFinalEvenValues] = useState([]);\n  const [showI, setShowI] = React.useState(true)\n\n  const addExperiencePoint = (e) =>{\n    e.preventDefault();\n    if (searchTerm.length === 0) {\n      alert(\"Please enter experience\")\n    }\n    else{\n      setExperiencePoints([ ...experiencePoints, {\n          id: experiencePoints.length,\n          value: searchTerm\n      } ])\n      setSearchTerm(\"\")\n    }\n  }\n\n  const handleChange = event => {\n      setSearchTerm(event.target.value);\n  };\n  \n  let result;\nconst FinalResult = (e1) =>{\n  e1.preventDefault();\n  setFinalEvenValues(experiencePoints);\n\n  setExperiencePoints('');\n\n}\n\n\nif (finalEvenValues.length > 0) {\n  result = (\n    <>\n    <div className=\"Result\">\n      <h3>Result</h3>\n          <p>\n          {finalEvenValues.filter(finalEvenValues => finalEvenValues.value %2 == 0).map(filteredfinalEvenValues => (\n            <>{filteredfinalEvenValues.value} &nbsp;</>\n          ))}\n          </p>\n\n          <p>\n          {finalEvenValues.filter(finalEvenValues => finalEvenValues.value %2 != 0).map(filteredfinalEvenValues => (\n            <>{filteredfinalEvenValues.value} &nbsp;</>\n          ))}\n          </p>\n    </div>\n    </>\n  )\n}\n\nconst Information = (e2) =>{\n  e2.preventDefault();\n  setShowI(!showI);\n  console.log(showI)\n}\n\nlet html;\n\nif (showI === true) {\n  html = (\n    <div className=\"TestForm\">\n      \n      <button className=\"Information\" onClick={Information}> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-.001 5.75c.69 0 1.251.56 1.251 1.25s-.561 1.25-1.251 1.25-1.249-.56-1.249-1.25.559-1.25 1.249-1.25zm2.001 12.25h-4v-1c.484-.179 1-.201 1-.735v-4.467c0-.534-.516-.618-1-.797v-1h3v6.265c0 .535.517.558 1 .735v.999z\"/></svg></button>\n      <form onSubmit={addExperiencePoint}>\n          <input type=\"number\"\n              placeholder=\"Experience Point\"\n              value={searchTerm}\n              onChange={handleChange} \n              /><br/><br/>\n\n          <div className=\"Buttons\">\n            <button type=\"submit\">ADD Experience Points</button>\n            <button onClick={FinalResult}>Submit</button>\n          </div>\n          </form>\n\n          {result}\n\n      </div>\n  )\n} else {\n  html=(\n    <div className=\"TestForm\">\n      <button className=\"Information\" onClick={Information}> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-.001 5.75c.69 0 1.251.56 1.251 1.25s-.561 1.25-1.251 1.25-1.249-.56-1.249-1.25.559-1.25 1.249-1.25zm2.001 12.25h-4v-1c.484-.179 1-.201 1-.735v-4.467c0-.534-.516-.618-1-.797v-1h3v6.265c0 .535.517.558 1 .735v.999z\"/></svg></button>\n      \n    <div className=\"wrapper\">\n    <p>Q 1. If you are given an array of experience points for an army of N men.<br/>\n    Identify how many of them belong to Marty's team and how many to Captain Chantel's army. <br/>\n    </p>\n    <p>\n    Given :\n    - Each member of Marty's team has even experience.<br/>\n    - Members of Captain Chantel's team have an odd experience.<br/>\n    </p>\n    <p>\n    Input Format<br/>\n    It consists of 2 lines. <br/>\n    The first line consists of a single integer N, denoting the total number of men. <br/>\n    The next line comprises on N space-separated integers, each integer denoting the experience points of a single man.<br/>\n    </p>\n    <p>\n    Output Format<br/>\n    Output 2 lines.<br/>\n    The first line comprises of space-separated integers denoting the experience points of every man in Marty's Force in the appropriate order.<br/>\n    The next line comprises of space-separated integers denoting the experience points of every man in Captain Chantel's force in the appropriate order.<br/>\n    </p>\n    <p>\n    Sample Input<br/>\n      3 1 14 7 6 7 2\n    </p>\n    <p>\n      Sample Output <br/>\n      2 6 14 <br/>\n      7 7 3 1\n      </p>\n    </div>\n    </div>\n  )\n}\n  return (\n    <div className=\"App\">\n      \n    {html}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}